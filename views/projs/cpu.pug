extends ../layouts/jqm-layout

append head
  script(src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.js')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.min.js')

block content
  canvas#speed(style="border: none; width: 100%; height: 200px;")
  //-script.
    // os module
    const socket = new io.connect('selection4test.ru:80');
    socket.on('os-cpus', function(cpuData){
      console.log(cpuData);

      let ctx = document.getElementById("speed").getContext("2d");
      let myChart = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: cpuData.map((e) => e.model),
          datasets: cpuData.map((e) => ({
            label: `speed, MHz`,
            data: [e.speed],
          })),
        },
      });
    });
  script.
    const reducer = (accumulator, currentValue) => accumulator + currentValue;
    const specialLog = (header, logType, args) => {
      console.group(header); // eslint-disable-line no-console
      switch (logType) {
        case 'error': args.map((e) => console.error(e)); break; // eslint-disable-line no-console
        case 'warn': args.map((e) => console.warn(e)); break; // eslint-disable-line no-console
        default: args.map((e) => console.log(e)); break; // eslint-disable-line no-console
      }
      console.groupEnd(header); // eslint-disable-line no-console
    };
    // specialLOG('look', null, ['tst']);

    // systeminformation module
    const socket = new io.connect('selection4test.ru:80');

    socket.on('systeminformation-cpu', function(cpuData){
      specialLog('cpu ()' , null, [cpuData])

      // let ctx = document.getElementById("speed").getContext("2d");

    });
    socket.on('systeminformation-networkStats', (d) => specialLog('networkStats ()' , null, [d]));
    socket.on('systeminformation-dockerContainerStats', (d) => specialLog('dockerContainerStats ()' , null, [d]));
    socket.on('systeminformation-processes', (d) => {
      specialLog('processes ()' , null, [d]);
      // d.list.map((e, i) => console.log(`list[${i}]mem_vsz= ${e.mem_vsz}`));
      // console.log(`Total mem_vsz= ${d.list.map((e) => e.mem_vsz).reduce(reducer)/1073741824} Gb`);
    });
    socket.on('systeminformation-currentLoad', (d) => specialLog('currentLoad ()' , null, [d]));
